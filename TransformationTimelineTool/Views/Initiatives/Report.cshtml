@using TransformationTimelineTool.Models;
@using TransformationTimelineTool.Helpers;
@model IEnumerable<TransformationTimelineTool.ViewModels.InitiativeViewModel>

@if(Culture == "fr")
{
    ViewBag.lang = "fra";
}
else
{
    ViewBag.lang = "eng";
}


@section Styles {
    <link href="@Url.Content("~/Content/table.css")" rel="stylesheet" type="text/css" />
}

<h2>@Resources.Initiatives @Resources.By @Resources.LastUpdated</h2>
@foreach (string type in Model.Select(o => o.Timeline).Distinct().ToList())
{
<h3>@type</h3>
<table class="table">
    <tr>
        <th>@Resources.Initiative</th>
        <th>@Resources.LastUpdated</th>
    </tr>
    @foreach (var item in Model.Where(i => i.Timeline == type))
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td @(DateTime.Now.AddDays(-60) > item.LastUpdated ? "class=important" : "")>
                @Html.DisplayFor(modelItem => item.LastUpdated)
            </td>
        </tr>
    }
</table>
}