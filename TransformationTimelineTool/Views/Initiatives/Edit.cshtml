@model TransformationTimelineTool.ViewModels.InitiativeViewModel

@if(Culture == "fr")
{
    ViewBag.lang = "fra";
}
else
{
    ViewBag.lang = "eng";
}


@{
    ViewBag.Title = Resources.Edit;
}

<h2>@Resources.Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="">
        <h4>@Resources.Initiative</h4>
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            <input type="hidden" name="TimelineType" id="TimelineType" value="@Model.Timeline" />
            @Html.LabelFor(model => model.Timeline, Resources.Timeline, htmlAttributes: new { @class = "col-sm-2 control-label" })
            <div class="col-md-10">
                <select id="Timeline" name="Timeline" class="form-control">
                    <option>TransformationTimeline</option>
                    <option>BP2020</option>
                </select>
                @Html.ValidationMessageFor(model => model.Timeline, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameE, Resources.EnglishName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameE, new { htmlAttributes = new { @class = "form-control fill-screen" } })
                @Html.ValidationMessageFor(model => model.NameE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NameF, Resources.InitFrenchName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameF, new { htmlAttributes = new { @class = "form-control fill-screen" } })
                @Html.ValidationMessageFor(model => model.NameF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionE, Resources.InitEnglishDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionE, new { @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.DescriptionE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionF, Resources.InitFrenchDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.DescriptionF, new { @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.DescriptionF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, Resources.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, Resources.End, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="@Resources.Submit" class="btn btn-default" /> |
                @Html.ActionLink(Resources.BackToList + " " + Resources.OfInitiatives, "Index", new {  lang =  ViewBag.lang})
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor-custom/ckeditor.js" type="text/javascript"></script>  
    <script>
        $(document).ready(function () {
            if ($('#TimelineType').val() != "TransformationTimeline") {
                $('#Timeline').val('BP2020');
            }
        });
    </script>
}
