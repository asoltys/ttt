@model TransformationTimelineTool.Models.Initiative

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Initiative</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.NameE)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NameE)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.NameF)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.NameF)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DescriptionE)
        </dt>

        <dd>
            @Html.Raw(Model.DescriptionE)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DescriptionF)
        </dt>

        <dd>
            @Html.Raw(Model.DescriptionF)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(Model => Model.Events)
        </dt>

        <dd>
            <table class="table table-condensed table-striped">
                <tr>
                    <th class="col-md-2">Date</th>
                    <th class="">Hover</th>
                    <th class="col-md-2">Action</th>
                </tr>
                @foreach( var item in Model.Events)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Date)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HoverE)
                        </td>
                        <td>
                            @Html.ActionLink("View", "Details", "Events", new { ID = item.ID }, null) | 
                            @Html.ActionLink("Edit", "Edit", "Events", new { ID =  item.ID }, null)
                        </td>
                    </tr>
                }
            </table>
        </dd>

        <dt>
            @Html.DisplayNameFor(Model => Model.Impacts)
        </dt>

        <dd>
            <table class="table table-condensed table-striped">
                <tr>
                    <th>Branch</th>
                    <th>Level</th>
                    <th></th>
                </tr>
                @foreach (var item in Model.Impacts)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Branch.NameE)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Level)
                        </td>
                        <td>
                            @Html.ActionLink("View", "Details", "Impacts", new { ID = item.ID }, null) | 
                            @Html.ActionLink("Edit", "Edit", "Impacts", new { ID = item.ID }, null)
                        </td>
                    </tr>
                }
            </table>
        </dd>


    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.ID }) |
    @Html.ActionLink("Back to List", "Index")
</p>



<input name="btnGetMovies" id="btnGetMovies" type="submit" value="Get Movies">
<ul id="movieList"></ul>

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript">
    $("#btnGetMovies").click(function () {
        var actionUrl = '@Url.Action("Data")';
        alert("hello world!");
        $.getJSON(actionUrl, displayData);
    });

    function displayData(response) {
        if (response != null) {
            for (var i = 0; i < response.length; i++) {
                $("#movieList").append("<li>" + response[i].Title + " " + response[i].Genre + " " + response[i].Year + "</li>")
            }
        }
    }
</script>