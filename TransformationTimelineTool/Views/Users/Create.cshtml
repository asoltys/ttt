@using Microsoft.AspNet.Identity.EntityFramework;
@model TransformationTimelineTool.ViewModels.UserViewModel

@{
    ViewBag.Title = Resources.CreateNew;
}

@if(Culture == "fr")
{
    ViewBag.lang = "fra";
}
else
{
    ViewBag.lang = "eng";
}

<h2>@Resources.CreateNew</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="">
        <h4>@Resources.User</h4>
       
        <div class="form-group">
            @Html.LabelFor(model => model.User.Email, Resources.Email,htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", style = "width:25em" } })
                @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 text-right"><strong>@Resources.Initiatives</strong></div>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;

                            foreach (var initiative in Model.PopulatedInitiatives)
                            {
                                if (cnt++ % 3 == 0)
                                {
                                    @:</tr><tr>
                               }
                                @:<td>
                                    <input type="checkbox"
                                           id="select_initiative_@initiative.ID"
                                           name="selectedInitiatives"
                                           value="@initiative.ID"
                                           @(Html.Raw(initiative.Flag ? "checked=\"checked\"" : "")) />
                                    <label class="no-style" for="select_initiative_@initiative.ID">@initiative.Name</label>
                                        @:</td>
                           }
                        }
                    </tr>
                    <tr>
                        <td>
                            <input type="checkbox" id="select_all_initiatives" name="selectAllInitiatives" checked/>
                            <label class="no-style" for="select_all_initiatives">@Resources.Deselect/@Resources.SelectAll</label>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2 text-right"><strong>@Resources.Roles</strong></div>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt2 = 0;

                            foreach (var role in Model.PopulatedRoles)
                            {
                                if (cnt2++ % 3 == 0)
                                {
                                    @:</tr><tr>
                               }
                                @:<td class="roleContainer">
                                    <input type="checkbox"
                                           id="select_user_role_@role.ID"
                                           name="selectedRoles"
                                           value="@role.Name"
                                           @(Html.Raw(role.Flag ? "checked=\"checked\"" : "")) />
                                        <label class="no-style" for="select_user_role_@role.ID">@role.Name</label>
                                        @:</td>
                           }
                        }
                    </tr>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
            @Html.LabelFor(model => model.User.ApproverID, Resources.AssignApprover, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.DropDownListFor(model => model.User.ApproverID, Model.ApproverSelect, "")
                @Html.ValidationMessageFor(model => model.User.ApproverID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="@Resources.Submit" class="btn btn-default" /> |
            @Html.ActionLink(Resources.BackToList + " " + Resources.OfUsers, "Index", new { lang = ViewBag.lang })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/front-end-custom-validation.js" type="text/javascript"></script>
    <script src="~/Scripts/toggleRegionsBranches.js" type="text/javascript"></script>

    <script>
        $(document).ready(function () {
            if (window.location.href.indexOf('fr') > -1) {
                var roles = $(".roleContainer");
                $.each(roles, function (index, dom) {
                    var $dom = $(dom);
                    var role = $dom.children('label').text().trim();
                    switch (role) {
                        case 'Admin':
                            $dom.children('label').text($('<div>').html('@Resources.Admin').text());
                            break;
                        case 'Approver':
                            $dom.children('label').text($('<div>').html('@Resources.Approver').text());
                            break;
                        case 'Editor':
                            $dom.children('label').text($('<div>').html('@Resources.Editor').text());
                            break;
                        default:
                            break;
                    }
                })
            }
        });
    </script>
}
