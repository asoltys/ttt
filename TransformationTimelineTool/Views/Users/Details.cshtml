@model TransformationTimelineTool.ViewModels.UserViewModel

@{
    ViewBag.Title = Resources.Details;
}

@if(Culture == "fr")
{
    ViewBag.lang = "fra";
}
else
{
    ViewBag.lang = "eng";
}

<h2>@Model.User.UserName</h2>
<hr />

<h4>@Resources.Email</h4>
<p>@Model.User.Email</p>

<h4>@Resources.Initiatives</h4>
<p>
    @Html.Raw(String.Join("<br />", Model.Initiatives.Select(init => init.Name)))
</p>

<h4>@Resources.Roles</h4>
<p class="roleContainer">@Model.UserRoles</p>

<h4>@Resources.Approver</h4>
<p>@Html.DisplayFor(model => model.Approver.UserName)</p>

@if (HttpContext.Current.User.IsInRole("Approver"))
{
    <h4>@Resources.Editors</h4>
    string Editors;
    if (Model.Editors != null)
    {
        Editors = String.Join(" - ", Model.Editors.Select(u => u.UserName).ToArray());
    } else
    {
        Editors = "";
    }
    <p>@Html.Raw(Editors)</p>
}

<p>
    @if (HttpContext.Current.User.IsInRole("Admin"))
    {
        @Html.ActionLink(Resources.Edit, "Edit", new {lang = ViewBag.lang, id = Model.User.Id}) @:|
    }
    @Html.ActionLink(Resources.BackToList + " " + Resources.OfUsers, "Index", new {lang = ViewBag.lang})
</p>
<script>
$(document).ready(function () {
    if (window.location.href.indexOf('fr') > -1) {
        var roles = $(".roleContainer");
        var result = roles.text().replace('Editor', '@Resources.Editor');
        result = result.replace('Admin', '@Resources.Admin');
        result = result.replace('Approver', '@Resources.Approver');
        roles.html(result);
    }
});
</script>