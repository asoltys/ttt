@model TransformationTimelineTool.Models.Event
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="">
        <h4>Activity</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.InitiativeID, "InitiativeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("InitiativeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.InitiativeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 text-right"><strong>@Resources.Branches</strong></div>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt = 0;

                            foreach (var branch in Model.Branches)
                            {
                                if (cnt++ % 3 == 0)
                                {
                                    @:</tr><tr>
                                }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedBranches"
                                           value="@branch.ID" />
                                        @branch.Name
                                        @:</td>
                            }
                        }
                    </tr>
                    <tr>
                        <td>
                            <input type="checkbox"
                                   name="selectAllBranches"
                                   id="selectAllBranches"
                                   value="allBranches"
                                   checked="checked"/>
                            @Resources.Deselect/@Resources.SelectAll
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2 text-right"><strong>@Resources.Regions</strong></div>
            <div class="col-md-offset-2 col-md-10">
                <table>
                    <tr>
                        @{
                            int cnt2 = 0;
                            

                            foreach (var region in Model.Regions)
                            {
                                if (cnt2++ % 3 == 0)
                                {
                                    @:</tr><tr>
                               }
                                @:<td>
                                    <input type="checkbox"
                                           name="selectedRegions"
                                           value="@region.ID" />
                                        @region.Name
                                     @:</td>
                           }
                        }
                    </tr>
                    <tr>
                        <td>
                            <input type="checkbox"
                                   name="selectAllRegions"
                                   id="selectAllRegions"
                                   value="allRegions"
                                   checked="checked" />
                            Deselect/Select All
                        </td>
                    </tr>
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PendingDate, htmlAttributes: new { @class = "" })
            <div class="">
                @Html.EditorFor(model => model.PendingDate, new { htmlAttributes = new { @class = "" } })
                @Html.ValidationMessageFor(model => model.PendingDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PendingTextE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PendingTextE, new { @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.PendingTextE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PendingTextF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PendingTextF, new { @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.PendingTextF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PendingHoverE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PendingHoverE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PendingHoverE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PendingHoverF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PendingHoverF, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PendingHoverF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(Resources.BackToList, "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor/ckeditor.js" type="text/javascript"></script>  

    <script>
        $(document).ready(function () {
            $('#selectAllRegions').click(function () {
                if ($(this).prop("checked")) {
                    $('input[name="selectedRegions"]').prop("checked", false);
                } else {
                    $('input[name="selectedRegions"]').prop("checked", true);
                }
            });

            $('#selectAllBranches').click(function () {
                if ($(this).prop("checked")) {
                    $('input[name="selectedBranches"]').prop("checked", false);
                } else {
                    $('input[name="selectedBranches"]').prop("checked", true);
                }
            });
        });
    </script>
}
