@model TransformationTimelineTool.ViewModels.EventViewModel

@if(Culture == "fr")
{
    ViewBag.lang = "fra";
}
else
{
    ViewBag.lang = "eng";
}


@{
    ViewBag.Title = Resources.CreateNew;
    var currentUser = HttpContext.Current.User;
}

<h2>@Resources.CreateNew</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="">
        <h4>@Resources.Activity</h4>
        <div class="form-group">
            @Html.LabelFor(model => model.Event.InitiativeID, Resources.InitiativeSelectLabel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Event.InitiativeID, Model.InitiativeSelect)
                @Html.ValidationMessageFor(model => model.Event.InitiativeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edit.Type, Resources.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.Edit.Type, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Edit.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edit.DisplayDate, Resources.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <p>@Html.Raw(Resources.EventDateInstr)</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edit.DisplayDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edit.DisplayDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group clearfix">
            <div id="branch_checkbox_container" class="no-margin">
                <strong>@Resources.Branches</strong>
                <br />
                @{
                    foreach (var branch in Model.Branches)
                    {
                        <input type="checkbox" id="select_branches_@branch.ID" name="selectedBranches" value="@branch.ID" />
                        <label class="no-style" for="select_branches_@branch.ID">@branch.Name</label>
                        <br />
                    }
                    <input type="checkbox" name="selectAllBranches" id="selectAllBranches" value="allBranches" checked="checked" />
                    <label class="no-style checkbox-label" for="selectAllBranches">@Resources.Deselect/@Resources.SelectAll</label>
                }
            </div>
            <br />
            <div id="region_checkbox_container" class="no-margin">
                <strong>@Resources.Regions</strong>
                <br />
                @{
                    foreach (var region in Model.Regions)
                    {
                        <input type="checkbox" id="select_regions_@region.ID" name="selectedRegions" value="@region.ID" />
                        <label class="no-style checkbox-label" for="select_regions_@region.ID">@region.Name</label>
                        <br />
                    }
                }
                <input type="checkbox" name="selectAllRegions" id="selectAllRegions" value="allRegions" checked="checked" />
                <label class="no-style" for="selectAllRegions">@Resources.Deselect/@Resources.SelectAll</label>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edit.HoverE, Resources.HoverDescEng, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Edit.HoverE, new { @class = "form-control", @cols = "50", @rows = "5" })
                <br />
                @Html.ValidationMessageFor(model => model.Edit.HoverE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edit.HoverF, Resources.HoverDescFra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Edit.HoverF, new { @class = "form-control", @cols = "50", @rows = "5" })
                <br />
                @Html.ValidationMessageFor(model => model.Edit.HoverF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edit.TextE, Resources.ActivityDetailedDescEng, htmlAttributes: new { @class = "control-label col-md-2" })
            <p>@Html.Raw(Resources.EventTextEng)</p>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Edit.TextE, new { @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.Edit.TextE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edit.TextF, Resources.ActivityDetailedDescFra, htmlAttributes: new { @class = "control-label col-md-2" })
            <p>@Html.Raw(Resources.EventTextFra)</p>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Edit.TextF, new { @class = "form-control ckeditor" })
                @Html.ValidationMessageFor(model => model.Edit.TextF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @if (currentUser.IsInRole("Admin") || currentUser.IsInRole("Approver"))
                {
                    @Html.LabelFor(model => model.Event.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.RadioButtonFor(model => model.Event.Status, TransformationTimelineTool.Models.Status.Draft, new { id = "status_draft", @checked = true })
                    <label class="no-style checkbox-label" for="status_draft">@Resources.Draft</label>
                    <br />
                    @Html.RadioButtonFor(model => model.Event.Status, TransformationTimelineTool.Models.Status.Pending, new { id = "status_pending" })
                    <label class="no-style checkbox-label" for="status_pending">@Resources.Pending</label>
                    <br />
                    @Html.RadioButtonFor(model => model.Event.Status, TransformationTimelineTool.Models.Status.Approved, new { id = "status_approved" })
                    <label class="no-style checkbox-label" for="status_approved">@Resources.Approved</label>
                }
                else
                {
                    @Html.LabelFor(model => model.Event.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.RadioButtonFor(model => model.Event.Status, TransformationTimelineTool.Models.Status.Draft, new { id = "status_draft", @checked = true })
                    <label class="no-style checkbox-label" for="status_draft">@Resources.Draft</label>
                    <br />
                    @Html.RadioButtonFor(model => model.Event.Status, TransformationTimelineTool.Models.Status.Pending, new { id = "status_pending" })
                    <label class="no-style checkbox-label" for="status_pending">@Resources.Pending</label>
                }
            </div>
        </div>

        <div class="form-actions no-color top-margin-10">
            <input type="submit" value="@Resources.Submit" class="btn btn-default" /> |
            @Html.ActionLink(Resources.BackToList + " " + Resources.OfActivities, "Index", new {  lang =  ViewBag.lang}, null)
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/ckeditor-custom/ckeditor.js" type="text/javascript"></script>
    <script src="~/Scripts/toggleRegionsBranches.js" type="text/javascript"></script>
    <script src="~/Scripts/front-end-custom-validation.js" type="text/javascript"></script>
    <script>
        $(document).ready(function () {
            if (window.location.href.indexOf('fr') > -1) {
                $('select option:contains("Milestone")').html('@Resources.Milestone');
                $('select option:contains("Training")').html('@Resources.Training');
                $('select option:contains("Draft")').html('@Resources.Draft');
                $('select option:contains("Pending")').html('@Resources.Pending');
                $('select option:contains("Approved")').html('@Resources.Approved');
            }
        });
    </script>
}
